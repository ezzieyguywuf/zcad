name: Zig CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Run daily at 10:00 UTC (5 AM EST / 6 AM EDT).
  schedule:
    - cron: '0 10 * * *'

jobs:
  test-stable:
    name: Test (Stable Zig)
    runs-on: ubuntu-latest
    container:
      image: ezzieyguywuf/zcad:0.15.1
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run tests
      run: zig build test

  format:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Check GLSL format
      run: |
        find shaders -type f \( -name "*.frag" -o -name "*.vert" \) -print0 | xargs -0 clang-format --dry-run --Werror
    - name: Check markdown format
      run: |
        pip install mdformat
        mdformat --check .

  test-nightly:
    name: Test (Zig Nightly)
    runs-on: ubuntu-latest
    container:
      image: ezzieyguywuf/zcad:0.15.1
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install latest Zig from master
      shell: bash
      run: |
        set -euo pipefail
        # Public key from https://ziglang.org/download/
        ZSF_PUBKEY="RWSGOq2NVecA2UPNdBUZykf1CCb147pkmdtYxgb3Ti+JO/wCYvhbAb/U"

        echo "==> Fetching tarball information from ziglang.org..."
        JSON_PAYLOAD=$(curl -s https://ziglang.org/download/index.json)
        TARBALL_PATH=$(echo "$JSON_PAYLOAD" | jq -r '.master."x86_64-linux".tarball')
        TARBALL_FILENAME=$(basename "$TARBALL_PATH")
        if [ -z "$TARBALL_FILENAME" ]; then
          echo "Error: Could not parse Zig download path from index.json" >&2
          exit 1
        fi
        echo "Target tarball: $TARBALL_FILENAME"

        echo "==> Fetching and shuffling community mirror list..."
        MIRROR_LIST=$(curl -s https://ziglang.org/download/community-mirrors.txt | grep . | shuf)

        DOWNLOAD_SUCCESS=false
        for mirror in $MIRROR_LIST; do
          TARBALL_URL="$mirror/$TARBALL_FILENAME"
          MINISIG_URL="$TARBALL_URL.minisig"
          echo "--> Attempting download from mirror: $mirror"
          if wget -q -O zig.tar.xz "$TARBALL_URL" && wget -q -O zig.tar.xz.minisig "$MINISIG_URL"; then
            echo "Download complete. Verifying signature..."
            if minisign -Vm zig.tar.xz -P "$ZSF_PUBKEY"; then
              echo "Signature valid. Success!"
              DOWNLOAD_SUCCESS=true
              break
            else
              echo "!! Signature verification FAILED for download from $mirror"
            fi
          else
            echo "Download failed from $mirror"
          fi
        done

        if [ "$DOWNLOAD_SUCCESS" = false ]; then
          echo "--> All mirrors failed. Attempting fallback to ziglang.org..."
          TARBALL_URL="https://ziglang.org$TARBALL_PATH"
          MINISIG_URL="$TARBALL_URL.minisig"
          if wget -q -O zig.tar.xz "$TARBALL_URL" && wget -q -O zig.tar.xz.minisig "$MINISIG_URL"; then
            echo "Download complete. Verifying signature..."
            if minisign -Vm zig.tar.xz -P "$ZSF_PUBKEY"; then
              echo "Signature valid. Success!"
              DOWNLOAD_SUCCESS=true
            else
              echo "!! Signature verification FAILED for download from ziglang.org"
            fi
          else
            echo "Download failed from ziglang.org"
          fi
        fi

        if [ "$DOWNLOAD_SUCCESS" = false ]; then
          echo "Error: Failed to download and verify Zig from all available sources." >&2
          exit 1
        fi

        echo "==> Extracting and installing Zig..."
        ZIG_DIR_NAME=${TARBALL_FILENAME%.tar.xz}
        echo "Derived Zig directory name: $ZIG_DIR_NAME"
        tar -xf zig.tar.xz

        echo "==> Adding Zig to PATH..."
        echo "$PWD/$ZIG_DIR_NAME" >> $GITHUB_PATH

        echo "==> Verifying Zig installation..."
        export PATH="$PWD/$ZIG_DIR_NAME:$PATH"
        zig version

    - name: Run tests with Zig (master)
      run: zig build test
