name: Zig Master CI

on:
  # Run on pushes to main and on PRs to main to catch breakages early.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Run daily at 10:00 UTC (5 AM EST / 6 AM EDT).
  schedule:
    - cron: '0 10 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-on-master:
    name: Test on Zig Master
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # We must fetch submodules for the tests to work.
        submodules: recursive

    - name: Install latest Zig from master
      run: |
        set -euo pipefail

        echo "==> Installing dependencies..."
        sudo apt-get update
        sudo apt-get install -y minisign jq wget

        # Public key from https://ziglang.org/download/
        ZSF_PUBKEY="RWSGOq2NVecA2UPNdBUZykf1CCb147pkmdtYxgb3Ti+JO/wCYvhbAb/U"

        echo "==> Fetching tarball information from ziglang.org..."
        JSON_PAYLOAD=$(curl -s https://ziglang.org/download/index.json)
        TARBALL_PATH=$(echo "$JSON_PAYLOAD" | jq -r '.master."x86_64-linux".tarball')
        TARBALL_FILENAME=$(basename "$TARBALL_PATH")
        
        if [ -z "$TARBALL_FILENAME" ]; then
          echo "Error: Could not parse Zig download path from index.json" >&2
          exit 1
        fi
        echo "Target tarball: $TARBALL_FILENAME"

        echo "==> Fetching and shuffling community mirror list..."
        # Fetch the list, filter out any empty lines, and shuffle it.
        MIRROR_LIST=$(curl -s https://ziglang.org/download/community-mirrors.txt | grep . | shuf)

        DOWNLOAD_SUCCESS=false
        # Loop through community mirrors
        for mirror in $MIRROR_LIST; do
          TARBALL_URL="$mirror/$TARBALL_FILENAME"
          MINISIG_URL="$TARBALL_URL.minisig"
          
          echo "--> Attempting download from mirror: $mirror"
          if wget -q -O zig.tar.xz "$TARBALL_URL" && wget -q -O zig.tar.xz.minisig "$MINISIG_URL"; then
            echo "Download complete. Verifying signature..."
            if minisign -Vm zig.tar.xz -P "$ZSF_PUBKEY"; then
              echo "Signature valid. Success!"
              DOWNLOAD_SUCCESS=true
              break
            else
              echo "!! Signature verification FAILED for download from $mirror"
            fi
          else
            echo "Download failed from $mirror"
          fi
        done

        # Fallback to official server if all mirrors fail
        if [ "$DOWNLOAD_SUCCESS" = false ]; then
          echo "--> All mirrors failed. Attempting fallback to ziglang.org..."
          TARBALL_URL="https://ziglang.org$TARBALL_PATH"
          MINISIG_URL="$TARBALL_URL.minisig"
          
          if wget -q -O zig.tar.xz "$TARBALL_URL" && wget -q -O zig.tar.xz.minisig "$MINISIG_URL"; then
            echo "Download complete. Verifying signature..."
            if minisign -Vm zig.tar.xz -P "$ZSF_PUBKEY"; then
              echo "Signature valid. Success!"
              DOWNLOAD_SUCCESS=true
            else
              echo "!! Signature verification FAILED for download from ziglang.org"
            fi
          else
            echo "Download failed from ziglang.org"
          fi
        fi

        if [ "$DOWNLOAD_SUCCESS" = false ]; then
          echo "Error: Failed to download and verify Zig from all available sources." >&2
          exit 1
        fi

        echo "==> Extracting and installing Zig..."
        mkdir zig-dist
        tar -xf zig.tar.xz -C ./zig-dist --strip-components=1
        echo "$PWD/zig-dist" >> $GITHUB_PATH

        echo "==> Verifying Zig installation..."
        zig version

    - name: Run tests with Zig (master)
      run: zig build test
